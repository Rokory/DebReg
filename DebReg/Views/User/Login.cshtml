@using Resources.User.Login
@model DebReg.Web.Models.UserCredentials

@{
    ViewBag.Title = Html.Encode(Resources.User.Login.Strings.Title);
}

<div class="container">
    <div class="row">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
        
            <div class="form-horizontal">
                <h2>@Html.Encode(Resources.User.Login.Strings.Heading)</h2>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.SponsoringOrganizationId)
                <div class="form-group">
                    @Html.LabelFor(model => model.EMail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EMail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EMail, "", new { @class = "text-danger" })
                    </div>
                </div>
    
                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.PasswordFor(model => model.Password, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
    
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="@Html.Encode(Resources.User.Login.Strings.LoginButton)" class="btn btn-default" />
                    </div>
                </div>
            </div>
                    if (Model.SponsoringOrganizationId != Guid.Empty)
                    {
                    <div>
                        @Html.ActionLink(Html.Encode(Resources.User.Login.Strings.NewUserLink), "Register", new { returnUrl = Model.returnUrl, sponsoringOrganizationId = Model.SponsoringOrganizationId })
                    </div>
                }
            <div>
                @Html.ActionLink(Html.Encode(Resources.User.Login.Strings.ForgotPasswordLink), "RequestPasswordReset", new { returnUrl = Model.returnUrl })
            </div>
        }
    </div>
</div>