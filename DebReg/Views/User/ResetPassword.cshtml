@model DebReg.Web.Models.PasswordResetViewModel

@{
    ViewBag.Title = Resources.User.ResetPassword.Strings.Title;
}

<h2>@Resources.User.ResetPassword.Strings.Heading</h2>
<hr />
@using (Html.BeginForm(new { returnUrl = ViewBag.ReturnUrl })) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.Token)


        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="@Html.Encode(Resources.User.ResetPassword.Strings.ResetPasswordButton)"/>
            </div>
        </div>
    </div>
}
@if (! ViewData.ModelState.IsValid)
{
    
    <div>
        @Html.ActionLink(
            Resources.User.ResetPassword.Strings.RequestPasswordResetLinkCaption,
            "RequestPasswordReset",
            new { returnUrl = ViewBag.ReturnUrl})
    </div>
}
